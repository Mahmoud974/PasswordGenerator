{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { numericLiteral } from \"@babel/types\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  useEffect(() => {\n    let data = new Date();\n    let timestamp = Date.parse(data);\n    console.log(timestamp);\n    console.log(data.toISOString());\n\n    const dataParser = chaine => {\n      let newDate = new Date(chaine).toLocalDateString(\"fr-FR\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\"\n      });\n      return newDate;\n    };\n\n    console.log(dataParser(data));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/manuscrit974gmail.com/Desktop/javascritpreact/src/App.js"],"names":["React","useEffect","useState","numericLiteral","App","data","Date","timestamp","parse","console","log","toISOString","dataParser","chaine","newDate","toLocalDateString","year","month","day"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,cAA/B;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChBH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,IAAI,GAAG,IAAIC,IAAJ,EAAX;AAEA,QAAIC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAWH,IAAX,CAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEAE,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACM,WAAL,EAAZ;;AAEA,UAAMC,UAAU,GAAGC,MAAM,IAAI;AAC3B,UAAIC,OAAO,GAAG,IAAIR,IAAJ,CAASO,MAAT,EAAiBE,iBAAjB,CAAmC,OAAnC,EAA4C;AACxDC,QAAAA,IAAI,EAAE,SADkD;AAExDC,QAAAA,KAAK,EAAE,SAFiD;AAGxDC,QAAAA,GAAG,EAAE;AAHmD,OAA5C,CAAd;AAKA,aAAOJ,OAAP;AACD,KAPD;;AAQAL,IAAAA,OAAO,CAACC,GAAR,CAAYE,UAAU,CAACP,IAAD,CAAtB;AACD,GAjBQ,CAAT;AAmBA,sBAAO,qCAAP;AACD,CArBD;;GAAMD,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { numericLiteral } from \"@babel/types\";\nconst App = () => {\n  useEffect(() => {\n    let data = new Date();\n\n    let timestamp = Date.parse(data);\n    console.log(timestamp);\n\n    console.log(data.toISOString());\n\n    const dataParser = chaine => {\n      let newDate = new Date(chaine).toLocalDateString(\"fr-FR\", {\n        year: \"numeric\",\n        month: \"numeric\",\n        day: \"numeric\"\n      });\n      return newDate;\n    };\n    console.log(dataParser(data));\n  });\n\n  return <></>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}